<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>